<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>